apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka'
apply plugin: "org.sonarqube"

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "2.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        main { res.srcDirs = ['src/main/res', 'src/test/main/res', 'src/test/resources'] }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // AWS SDKs
    //
    // AWS SDKs do not follow semantic versioning rules so we need to strictly specify AWS SDK versions.
    // Follow the process at https://anonyome.atlassian.net/wiki/spaces/PLA/pages/840073287/AWS+Android+SDK+versions+to+use+for+platform+SDKs
    // for updating AWS SDK versions.
    implementation "com.amazonaws:aws-android-sdk-core:$aws_version!!"
    implementation "com.amazonaws:aws-android-sdk-appsync:$appsync_version!!"

    implementation 'com.appmattus.certificatetransparency:certificatetransparency-android:0.3.0'

    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation("androidx.test.ext:junit:1.1.2")
    androidTestImplementation "io.kotlintest:kotlintest-assertions:3.4.2"

    // Sudo Platform SDKs.
    implementation 'com.sudoplatform:sudoconfigmanager:1.2.2'
    implementation 'com.sudoplatform:sudouser:9.3.4'
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

apply plugin: 'maven'

ext {
    projectGroup = 'com.sudoplatform'
    projectArtifact = 'sudoapiclient'
    projectDescription = 'An Android library used by SudoPlatform SDKs for sharing a single AWS AppSync Client'
    projectUrl = 'https://github.com/sudoplatform/sudo-api-client-android'
    projectSCM = 'scm:git:github.com/sudoplatform/sudo-api-client-android.git'
    if (project.hasProperty('tag')) {
        projectVersion = "$tag"
    } else {
        projectVersion = project.android.defaultConfig.versionName
    }
}

if(project.findProperty("tag") &&
        project.file("${rootProject.projectDir}/util/publish-mavencentral.gradle").exists()) {
    apply from: "${rootProject.projectDir}/util/publish-mavencentral.gradle"
}
else if (project.file("${rootProject.projectDir}/util/publish-internal-android.gradle").exists()) {
    apply from: "${rootProject.projectDir}/util/publish-internal-android.gradle"
}

